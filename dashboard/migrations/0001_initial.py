# Generated by Django 5.2.6 on 2025-10-17 03:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('Nam', 'Nam'), ('Nữ', 'Nữ'), ('Khác', 'Khác')], max_length=10, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='patient_avatars/', verbose_name='Avatar')),
                ('citizen_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Citizen ID')),
                ('health_insurance_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Health Insurance ID')),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ethnicity')),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('Unknown', 'Chưa rõ')], default='Unknown', max_length=10, verbose_name='Blood Type')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('medical_history', models.TextField(blank=True, null=True, verbose_name='Medical History')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Patients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, null=True, unique=True, verbose_name='Product Code')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Product Name')),
                ('quantity', models.PositiveIntegerField(null=True, verbose_name='Quantity')),
                ('import_price', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Import Price')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Sale Price')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('supplier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Supplier')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Unit of Measure')),
                ('uom_type', models.CharField(choices=[('reference', 'Reference Unit for this category'), ('bigger', 'Bigger than the reference Unit of Measure'), ('smaller', 'Smaller than the reference Unit of Measure')], max_length=20, verbose_name='Type')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('rounding_precision', models.FloatField(default=0.01, verbose_name='Rounding Precision')),
            ],
            options={
                'verbose_name_plural': 'Units of Measure',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
            ],
            options={
                'verbose_name_plural': 'UoM Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Chờ lấy thuốc'), ('Dispensed', 'Đã lấy thuốc'), ('Cancelled', 'Đã hủy')], default='Pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name_plural': 'Prescriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.prescription', verbose_name='From Prescription')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.product')),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='dashboard.productcategory', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.productcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='uom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.unitofmeasure', verbose_name='Base Unit of Measure'),
        ),
        migrations.CreateModel(
            name='PrescriptionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(null=True, verbose_name='Quantity')),
                ('is_collected', models.BooleanField(default=False, verbose_name='Collected')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='dashboard.prescription', verbose_name='Prescription')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.product', verbose_name='Product')),
                ('uom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.unitofmeasure', verbose_name='Unit')),
            ],
            options={
                'verbose_name_plural': 'Prescription Details',
            },
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uoms', to='dashboard.uomcategory', verbose_name='Category'),
        ),
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversion_factor', models.IntegerField(verbose_name='Conversion Factor')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boms', to='dashboard.product', verbose_name='Product')),
                ('uom_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boms_from', to='dashboard.unitofmeasure', verbose_name='From Unit')),
                ('uom_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boms_to', to='dashboard.unitofmeasure', verbose_name='To Unit')),
            ],
            options={
                'verbose_name_plural': 'Bills of Materials',
                'unique_together': {('product', 'uom_from', 'uom_to')},
            },
        ),
    ]
